#3
what <- ts_data[order(ts_data$SF),1:10]
head(sort(ts)data$SF,decreasing=TRUE), n = 50)
head(sort(ts_data$SF,decreasing=TRUE), n = 50)
#1
ts_data = read.csv('https://s3.amazonaws.com/graderdata/TimesSquareSignage.csv', stringsAsFactors=FALSE)
head(sort(ts_data$SF,decreasing=TRUE), n = 50)
what <- head(sort(ts_data$SF,decreasing=TRUE), n = 50)
what <-  head(arrange(ts_data, desc(ts_data$SF)), n = 10)
#3
what <- ts_data[order(ts_data$SF),]
View(what)
#3
what <- ts_data[order(SF),]
#3
what <- ts_data[order(ts_data$SF),]
View(ts_data)
#3
what <- ts_data[order(ts_data$SF), 1:3]
View(what)
#3
what <- ts_data[order(ts_data$SF), ]
View(what)
#3
data_all <- ts_data[with(ts_data,order(ts_data$SF)),]
View(data_all)
data_top_10 <- data[-1:-10,]
#3
data_all <- ts_data[with(ts_data,order(-ts_data$SF)),]
View(data_all)
data_top_10 <- data[1:10,]
data_top_10 <- data_all[1:10,]
data_top_10 <- data_all[1:10, 1:3]
View(data_top_10)
cases.reg <- get_data(filters="areaType=overview", structure=list(date="date",
name="areaName",
new.cases = "newCasesByPublishDate",
cum.cases = "cumCasesByPublishDate",
deaths="newDeaths28DaysByDeathDate",
cum.deaths="cumDeaths28DaysByDeathDate",
cum.death.rate = "cumDeaths28DaysByDeathDateRate",
male = "maleCases",
female="femaleCases",
vaccine.first="newPeopleVaccinatedFirstDoseByPublishDate",
vaccine.second="newPeopleVaccinatedSecondDoseByPublishDate",
vaccine.complete="newPeopleVaccinatedCompleteByPublishDate",
cum.vaccine.first="cumPeopleVaccinatedFirstDoseByPublishDate",
cum.vaccine.second="cumPeopleVaccinatedSecondDoseByPublishDate"
))
shiny::runApp('C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project')
cases.reg <- get_data(filters="areaType=overview", structure=list(date="date",
name="areaName",
new.cases = "newCasesByPublishDate",
cum.cases = "cumCasesByPublishDate",
deaths="newDeaths28DaysByDeathDate",
cum.deaths="cumDeaths28DaysByDeathDate",
cum.death.rate = "cumDeaths28DaysByDeathDateRate",
male = "maleCases",
female="femaleCases",
vaccine.first="newPeopleVaccinatedFirstDoseByPublishDate",
vaccine.second="newPeopleVaccinatedSecondDoseByPublishDate",
vaccine.complete="newPeopleVaccinatedCompleteByPublishDate",
cum.vaccine.first="cumPeopleVaccinatedFirstDoseByPublishDate",
cum.vaccine.second="cumPeopleVaccinatedSecondDoseByPublishDate"
))
## for st georges
hosp.reg <- get_data(filters="areaType=overview", structure=list(date="date",
name="areaName",
new.cases = "newCasesByPublishDate",
cum.cases = "cumCasesByPublishDate",
deaths="newDeaths28DaysByDeathDate",
cum.deaths="cumDeaths28DaysByDeathDate",
hosp.cases="hospitalCases",
MV.beds = "covidOccupiedMVBeds",
new.admissions = "newAdmissions",
cum.admissions = "cumAdmissions",
adm.by.age = "cumAdmissionsByAge",
vaccine.first="newPeopleVaccinatedFirstDoseByPublishDate",
vaccine.second="newPeopleVaccinatedSecondDoseByPublishDate",
vaccine.complete="newPeopleVaccinatedCompleteByPublishDate"
))
cases.ltla.reg <- get_data(filters="areaType=ltla", structure=list(date="date",
name="areaName",
new.cases = "newCasesByPublishDate",
cum.cases = "cumCasesByPublishDate",
deaths="newDeaths28DaysByDeathDate",
cum.deaths="cumDeaths28DaysByDeathDate",
cum.death.rate = "cumDeaths28DaysByDeathDateRate",
male = "maleCases",
female="femaleCases",
vaccine.first="newPeopleVaccinatedFirstDoseByPublishDate",
vaccine.second="newPeopleVaccinatedSecondDoseByPublishDate",
vaccine.complete="newPeopleVaccinatedCompleteByPublishDate"
))
topoData <- rgdal::readOGR("C:/Users/Vallari/Downloads/Local_Authority_Districts_(May_2021)_UK_BUC.geojson")
topoData2 <- topoData
runApp('C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project')
cases.ltla.reg <- get_data(filters="areaType=ltla", structure=list(date="date",
name="areaName",
new.cases = "newCasesByPublishDate",
cum.cases = "cumCasesByPublishDate",
deaths="newDeaths28DaysByDeathDate",
cum.deaths="cumDeaths28DaysByDeathDate",
cum.death.rate = "cumDeaths28DaysByDeathDateRate",
male = "maleCases",
female="femaleCases",
vaccine.first="newPeopleVaccinatedFirstDoseByPublishDate",
vaccine.second="newPeopleVaccinatedSecondDoseByPublishDate",
vaccine.complete="newPeopleVaccinatedCompleteByPublishDate"
))
## for st georges
hosp.reg <- get_data(filters="areaType=overview", structure=list(date="date",
name="areaName",
new.cases = "newCasesByPublishDate",
cum.cases = "cumCasesByPublishDate",
deaths="newDeaths28DaysByDeathDate",
cum.deaths="cumDeaths28DaysByDeathDate",
hosp.cases="hospitalCases",
MV.beds = "covidOccupiedMVBeds",
new.admissions = "newAdmissions",
cum.admissions = "cumAdmissions",
adm.by.age = "cumAdmissionsByAge",
vaccine.first="newPeopleVaccinatedFirstDoseByPublishDate",
vaccine.second="newPeopleVaccinatedSecondDoseByPublishDate",
vaccine.complete="newPeopleVaccinatedCompleteByPublishDate"
))
cases.ltla.reg <- get_data(filters="areaType=ltla", structure=list(date="date",
name="areaName",
new.cases = "newCasesByPublishDate",
cum.cases = "cumCasesByPublishDate",
deaths="newDeaths28DaysByDeathDate",
cum.deaths="cumDeaths28DaysByDeathDate",
cum.death.rate = "cumDeaths28DaysByDeathDateRate"
))
cases.reg <- get_data(filters="areaType=overview", structure=list(date="date",
name="areaName",
new.cases = "newCasesByPublishDate",
cum.cases = "cumCasesByPublishDate",
deaths="newDeaths28DaysByDeathDate",
cum.deaths="cumDeaths28DaysByDeathDate",
cum.death.rate = "cumDeaths28DaysByDeathDateRate",
hosp.cases="hospitalCases",
MV.beds = "covidOccupiedMVBeds",
new.admissions = "newAdmissions",
cum.admissions = "cumAdmissions",
adm.by.age = "cumAdmissionsByAge",
male = "maleCases",
female="femaleCases",
vaccine.first="newPeopleVaccinatedFirstDoseByPublishDate",
vaccine.second="newPeopleVaccinatedSecondDoseByPublishDate",
vaccine.complete="newPeopleVaccinatedCompleteByPublishDate",
cum.vaccine.first="cumPeopleVaccinatedFirstDoseByPublishDate",
cum.vaccine.second="cumPeopleVaccinatedSecondDoseByPublishDate"
))
library(tidyverse)
library(ukcovid19) #remotes::install_github("publichealthengland/coronavirus-dashboard-api-R-sdk")
library(paletteer)
library(RcppRoll)
library(lubridate)
library(scales)
library(ragg)
library(ggplot2)
library(dplyr)
library(viridis)
#mapping
library(leaflet)
#install.packages("rgdal")
library(rgdal)
library(RColorBrewer)
library(DT)
library(shiny)
library(googleVis)
cases.reg <- get_data(filters="areaType=overview", structure=list(date="date",
name="areaName",
new.cases = "newCasesByPublishDate",
cum.cases = "cumCasesByPublishDate",
deaths="newDeaths28DaysByDeathDate",
cum.deaths="cumDeaths28DaysByDeathDate",
cum.death.rate = "cumDeaths28DaysByDeathDateRate",
hosp.cases="hospitalCases",
MV.beds = "covidOccupiedMVBeds",
new.admissions = "newAdmissions",
cum.admissions = "cumAdmissions",
adm.by.age = "cumAdmissionsByAge",
male = "maleCases",
female="femaleCases",
vaccine.first="newPeopleVaccinatedFirstDoseByPublishDate",
vaccine.second="newPeopleVaccinatedSecondDoseByPublishDate",
vaccine.complete="newPeopleVaccinatedCompleteByPublishDate",
cum.vaccine.first="cumPeopleVaccinatedFirstDoseByPublishDate",
cum.vaccine.second="cumPeopleVaccinatedSecondDoseByPublishDate"
))
cases.ltla.reg <- get_data(filters="areaType=ltla", structure=list(date="date",
name="areaName",
new.cases = "newCasesByPublishDate",
cum.cases = "cumCasesByPublishDate",
deaths="newDeaths28DaysByDeathDate",
cum.deaths="cumDeaths28DaysByDeathDate",
cum.death.rate = "cumDeaths28DaysByDeathDateRate"
))
setwd("C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project/Data")
write.csv(cases.reg, "covidcases.csv")
install.packages("RSQLite")
library(RSQLite)
library(data.table)
data <- fread(input=csvpath,
sep=",",
header=TRUE)
csvpath = "C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project/Data/covidcases.csv"
dbname= "./covid.sqlite"
tblname ="UKcovidcases"
data <- fread(input=csvpath,
sep=",",
header=TRUE)
View(data)
##connect to database
conn <- dbConnect(drv=SQLite().
dbname=dbname)
##connect to database
conn <- dbConnect(drv=SQLite(),
dbname=dbname)
dbWriteTable(conn=conn,
name=tblname,
value=data)
#list tables
dblistTables(conn)
#list tables
dbListTables(conn)
dbDisconnect(conn)
cases.ltla.reg <- get_data(filters="areaType=ltla", structure=list(date="date",
name="areaName",
new.cases = "newCasesByPublishDate",
cum.cases = "cumCasesByPublishDate",
deaths="newDeaths28DaysByDeathDate",
cum.deaths="cumDeaths28DaysByDeathDate",
cum.death.rate = "cumDeaths28DaysByDeathDateRate"
))
install.packages("rsconnect")
library(rsconnect)
rsconnect::setAccountInfo(name='vallarishah',
token='7548C0F47303B6EF27D74441C97F57FA',
secret='<SECRET>')
rsconnect::setAccountInfo(name='vallarishah',
token='7548C0F47303B6EF27D74441C97F57FA',
secret='<SECRET>')
rsconnect::setAccountInfo(name='vallarishah',
token='7548C0F47303B6EF27D74441C97F57FA',
secret='<SECRET>')
runApp('C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project')
rsconnect::setAccountInfo(name='vallarishah',
token='7548C0F47303B6EF27D74441C97F57FA',
secret='r9LlM4dELesYTUj8Qy6/+enPtF1Vm+SE2PkbDNHy')
getwd()
write.csv(cases.ltla.reg, file="Local_authority_wise_cases_21082021.csv")
cases.reg <- read.csv("C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project/Data/covidcases.csv", header=TRUE)
cases.ltla.reg <- read.csv("C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project/Data/Local_authority_wise_cases_21082021.csv", header=TRUE)
topoData <- rgdal::readOGR("C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project/Data/Local_Authority_Districts_(May_2021)_UK_BUC.geojson")
topoData2 <- topoData
data_table <- hosp.reg %>%
select("Date"="date", "Cases" = new.cases, "Deaths"=deaths, "Hopsitalised_patients"=hosp.cases, "Mechanicaly_ventilated"=MV.beds, "First_vaccine_dose"=vaccine.first, "Second_vaccine_dose"=vaccine.second, vaccine.complete)
library(tidyverse)
library(ukcovid19) #remotes::install_github("publichealthengland/coronavirus-dashboard-api-R-sdk")
library(paletteer)
library(RcppRoll)
library(lubridate)
library(scales)
library(ragg)
library(ggplot2)
library(dplyr)
library(viridis)
#mapping
library(leaflet)
#install.packages("rgdal")
library(rgdal)
library(RColorBrewer)
library(DT)
library(shiny)
library(googleVis)
cases.reg <- read.csv("C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project/Data/covidcases.csv", header=TRUE)
cases.ltla.reg <- read.csv("C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project/Data/Local_authority_wise_cases_21082021.csv", header=TRUE)
topoData <- rgdal::readOGR("C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project/Data/Local_Authority_Districts_(May_2021)_UK_BUC.geojson")
topoData2 <- topoData
data_table <- hosp.reg %>%
select("Date"="date", "Cases" = new.cases, "Deaths"=deaths, "Hopsitalised_patients"=hosp.cases, "Mechanicaly_ventilated"=MV.beds, "First_vaccine_dose"=vaccine.first, "Second_vaccine_dose"=vaccine.second, vaccine.complete)
data_table <- cases.reg %>%
select("Date"="date", "Cases" = new.cases, "Deaths"=deaths, "Hopsitalised_patients"=hosp.cases, "Mechanicaly_ventilated"=MV.beds, "First_vaccine_dose"=vaccine.first, "Second_vaccine_dose"=vaccine.second, vaccine.complete)
runApp('C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project')
runApp('C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project')
runApp('C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project')
runApp('C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project')
cases.reg <- read.csv("C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project/Data/covidcases.csv", header=TRUE)
cases.ltla.reg <- read.csv("C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project/Data/Local_authority_wise_cases_21082021.csv", header=TRUE)
topoData <- rgdal::readOGR("C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project/Data/Local_Authority_Districts_(May_2021)_UK_BUC.geojson")
topoData2 <- topoData
data_table <- cases.reg %>%
select("Date"="date", "Cases" = new.cases, "Deaths"=deaths, "Hopsitalised_patients"=hosp.cases, "Mechanicaly_ventilated"=MV.beds, "First_vaccine_dose"=vaccine.first, "Second_vaccine_dose"=vaccine.second, vaccine.complete)
runApp('C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project')
View(cases.ltla.reg)
runApp('C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project')
runApp('C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project')
runApp('C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project')
topoData2 <- topoData
##subset to one day
daily.cases.ltla <- cases.ltla.reg %>%
mutate(name = ifelse(name=="Cornwall and Isles of Scilly", "Cornwall", name)) %>%
filter(date == DatesMerge)
##subset to one day
daily.cases.ltla <- cases.ltla.reg %>%
mutate(name = ifelse(name=="Cornwall and Isles of Scilly", "Cornwall", name)) %>%
filter(date == DatesMerge)
View(cases.reg)
View(topoData)
runApp('C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project')
runApp('C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project')
runApp('C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project')
max_value <- max(state_stat[,input$selected])
#merge covid data with map data from UK government
#topoData2@data <- merge(topoData@data, daily.cases.ltla, by.y="name", by.x="LAD13NM", all.x=TRUE, sort.x=FALSE) %>%
#  arrange(OBJECTID)
topoData2 <- topoData
topoData2@data <- merge(topoData@data, daily.cases.ltla,  by.x="LAD21NM", by.y="name", all.x=TRUE, sort.x=FALSE) %>%
arrange(OBJECTID)
runApp('C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project')
state_stat <- data.frame(state.name = rownames(state.x77), state.x77)
# remove row names
rownames(state_stat) <- NULL
choice <- colnames(state_stat)[-1]
runApp('C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project')
runApp('C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project')
runApp('C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project')
runApp('C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project')
runApp('C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project')
library(tidyverse)
library(ukcovid19) #remotes::install_github("publichealthengland/coronavirus-dashboard-api-R-sdk")
library(paletteer)
library(RcppRoll)
library(lubridate)
library(scales)
library(ragg)
library(ggplot2)
library(dplyr)
library(viridis)
#mapping
library(leaflet)
#install.packages("rgdal")
library(rgdal)
library(RColorBrewer)
library(DT)
library(shiny)
library(googleVis)
library(rsconnect)
## global.R ##
# convert matrix to dataframe
state_stat <- data.frame(state.name = rownames(state.x77), state.x77)
# remove row names
rownames(state_stat) <- NULL
choice <- colnames(state_stat)[-1]
cases.reg <- read.csv("covidcases.csv", header=TRUE)
cases.ltla.reg <- read.csv("Local_authority_wise_cases_21082021.csv", header=TRUE)
topoData <- rgdal::readOGR("Local_Authority_Districts_(May_2021)_UK_BUC.geojson")
# cases.reg <- read.csv("C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project/Data/covidcases.csv", header=TRUE)
#
# cases.ltla.reg <- read.csv("C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project/Data/Local_authority_wise_cases_21082021.csv", header=TRUE)
#
# topoData <- rgdal::readOGR("C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project/Data/Local_Authority_Districts_(May_2021)_UK_BUC.geojson")
data_table <- cases.reg %>%
select("Date"="date", "Cases" = new.cases, "Deaths"=deaths, "Hopsitalised_patients"=hosp.cases, "Mechanicaly_ventilated"=MV.beds, "First_vaccine_dose"=vaccine.first, "Second_vaccine_dose"=vaccine.second, vaccine.complete)
runApp('C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project')
setwd("C:/Users/Vallari/Desktop/NYC_academy/R/R_intro lectures/R_Shiny_project")
runApp()
runApp()
runApp()
